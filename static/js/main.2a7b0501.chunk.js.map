{"version":3,"sources":["api/goods.ts","GoodList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","goods","sort","a","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodList","memo","className","length","map","id","style","App","useState","setGoods","isInitialized","setInitialized","fetchGoods","callback","goodsFromServer","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qMAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAI,GAAK,OAAIA,EACZC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SAAOE,MAAM,EAAG,OAGhDC,EAAc,WACzB,OAAOb,IACJE,MAAK,SAAAI,GAAK,OAAIA,EAAMQ,QACnB,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,OCXNC,EAAsBC,gBAAK,gBAAGZ,EAAH,EAAGA,MAAH,OACtC,wBAAOa,UAAU,qBAAjB,UACE,gCACE,+BACE,oCACA,sCACA,4CAIJ,gCACGb,EAAMc,OAAS,EAAId,EAAMe,KAAI,SAAAN,GAAI,OAChC,+BACE,6BAAKA,EAAKO,KACV,6BAAKP,EAAKL,OACV,6BACE,sBAAMa,MAAO,CAAEP,MAAOD,EAAKC,OAA3B,SAAqCD,EAAKC,YAJrCD,EAAKO,OAQd,6BACE,6BACE,sBAAMH,UAAU,WAAWI,MAAO,CAAEP,MAAO,OAA3C,wCCkCGQ,EAvDO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAOnB,EAAP,KAAcoB,EAAd,KACA,EAAwCD,oBAAS,GAAjD,mBAAOE,EAAP,KAAsBC,EAAtB,KAEMC,EAAa,SAACC,GAClBA,IAAW5B,MAAK,SAAA6B,GACdL,EAASK,GACTH,GAAe,OAInB,OACE,yBAAST,UAAU,UAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,mCAECQ,GACC,qBAAKR,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,WAAb,yBAEA,cAACF,EAAD,CAAUX,MAAOA,SAKvB,wBACEa,UAAU,gCACVa,KAAK,SACLC,QAAS,kBAAMJ,EAAW7B,IAH5B,4BAQA,wBACEmB,UAAU,gCACVa,KAAK,SACLC,QAAS,kBAAMJ,EAAWxB,IAH5B,gCAQA,wBACEc,UAAU,oBACVa,KAAK,SACLC,QAAS,kBAAMJ,EAAWhB,IAH5B,kCC9CRqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.2a7b0501.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(\n      good => good.color === 'red',\n    ));\n};\n","import { FC, memo } from 'react';\n\ninterface Props {\n  goods: Good[],\n}\n\nexport const GoodList: FC<Props> = memo(({ goods }) => (\n  <table className=\"table is-hoverable\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Color</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {goods.length > 0 ? goods.map(good => (\n        <tr key={good.id}>\n          <td>{good.id}</td>\n          <td>{good.name}</td>\n          <td>\n            <span style={{ color: good.color }}>{good.color}</span>\n          </td>\n        </tr>\n      )) : (\n        <tr>\n          <td>\n            <span className=\"subtitle\" style={{ color: 'red' }}>\n              No goods found\n            </span>\n          </td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n));\n","import React, { useState } from 'react';\nimport './App.scss';\nimport 'bulma';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodList } from './GoodList';\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isInitialized, setInitialized] = useState(false);\n\n  const fetchGoods = (callback:() => Promise<Good[]>) => {\n    callback().then(goodsFromServer => {\n      setGoods(goodsFromServer);\n      setInitialized(true);\n    });\n  };\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Dynamic list of Goods</h1>\n\n        {isInitialized && (\n          <div className=\"columns\">\n            <div className=\"column\">\n              <p className=\"subtitle\">Goods table</p>\n\n              <GoodList goods={goods} />\n            </div>\n          </div>\n        )}\n\n        <button\n          className=\"button is-primary button--gap\"\n          type=\"button\"\n          onClick={() => fetchGoods(getAll)}\n        >\n          Load All goods\n        </button>\n\n        <button\n          className=\"button is-primary button--gap\"\n          type=\"button\"\n          onClick={() => fetchGoods(get5First)}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          className=\"button is-primary\"\n          type=\"button\"\n          onClick={() => fetchGoods(getRedGoods)}\n        >\n          Load red goods\n        </button>\n\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}